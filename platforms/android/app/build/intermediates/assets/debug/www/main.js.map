{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/exchange-rate.service.ts","webpack:///./src/app/exchange-rate.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"h1 {\\n    color: #369;\\n    font-family: Arial, Helvetica, sans-serif;\\n    font-size: 250%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gseUNBQXlDO0lBQ3pDLGVBQWU7RUFDakIiLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbImgxIHtcbiAgICBjb2xvcjogIzM2OTtcbiAgICBmb250LWZhbWlseTogQXJpYWwsIEhlbHZldGljYSwgc2Fucy1zZXJpZjtcbiAgICBmb250LXNpemU6IDI1MCU7XG4gIH0iXX0= */\"","module.exports = \"<div style=\\\"text-align:center\\\">\\n  <h1>\\n    Welcome to {{ title }}!\\n  </h1>\\n</div>\\n<div>\\n  <span>source:</span>&nbsp;&nbsp;&nbsp;\\n  <select [(ngModel)]=\\\"source\\\" (change)=\\\"onSourceOption()\\\">\\n    <option *ngFor=\\\"let currency of currencies\\\" ><span>{{currency}}</span></option>\\n  </select>\\n  &nbsp;&nbsp;&nbsp;\\n  <input [(ngModel)]=\\\"sourceAmount\\\" (keyup)=\\\"onSourceInput()\\\"/>\\n</div>\\n<br/>\\n<div>\\n    <span>target&nbsp;:</span>&nbsp;&nbsp;&nbsp;\\n    <select [(ngModel)]=\\\"target\\\" (change)=\\\"onTargetOption()\\\">\\n      <option *ngFor=\\\"let currency of currencies\\\"><span>{{currency}}</span></option>\\n    </select>\\n    &nbsp;&nbsp;&nbsp;\\n    <input [(ngModel)]=\\\"targetAmount\\\" (keyup)=\\\"onTargetInput()\\\"/>\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { ExchangeRateService } from './exchange-rate.service';\nimport { ExchangeRate } from './exchange-rate';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent implements OnInit{\n  title = 'CurrencyExchange';\n  exchangeRates : ExchangeRate[];\n  currencies : string[];\n  sourceAmount : number;\n  targetAmount : number;\n  source : string = 'USD';\n  target : string = 'USD';\n\n  constructor(private exchangeRateService : ExchangeRateService){}\n\n  async getExchangeRates(){\n    this.exchangeRates = await this.exchangeRateService.getExchangeRates();\n  }\n  getCurrencies(){\n    this.currencies = this.exchangeRateService.getCurrencies();\n  }\n  ngOnInit(){\n    this.getCurrencies();\n    this.getExchangeRates();\n  }\n  onSourceInput(){\n    this.targetAmount = this.exchangeRateService.getTargetAmountBySource( this.source, this.target, this.sourceAmount);\n  }\n\n  onTargetInput(){\n    this.sourceAmount = this.exchangeRateService.getSourceAmountByTarget( this.source, this.target, this.targetAmount);\n\n  }\n  onSourceOption(currency : string){\n    this.targetAmount = this.exchangeRateService.getTargetAmountBySource( this.source, this.target, this.sourceAmount);\n  }\n  onTargetOption(currency : string){\n    this.targetAmount = this.exchangeRateService.getTargetAmountBySource( this.source, this.target, this.sourceAmount);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BrowserModule } from '@angular/platform-browser';\nimport { HttpClientModule } from '@angular/common/http';\nimport { AppComponent } from './app.component';\nimport { FormsModule } from '@angular/forms'; // <-- NgModel lives here\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    FormsModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { ExchangeRate } from './exchange-rate';\n\nconst CURRENCIES : string[] = ['USD', 'CAD', 'CNY', 'EUR', 'GBP', 'CHF', 'AUD', 'HKD', 'RUB'];\nconst URL : string = 'http://apilayer.net/api/live?access_key=ba58bb60863ed6a169618b614bece399&source=USD&format=1&currencies=';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ExchangeRateService {\n  exchangeRates : ExchangeRate[];\n\n  constructor(private http : HttpClient) { }\n\n  getCurrencies(){\n    return CURRENCIES;\n  }\n\n  getRateBetweenSourceAndTarget(source : string, target : string){\n    var rateBetweenSourceAndUSD, rateBetweenTargetAndUSD;\n    for (let er of this.exchangeRates){\n      if(er.target == source){\n        rateBetweenSourceAndUSD = er.rate;\n      }\n      if(er.target == target){\n        rateBetweenTargetAndUSD = er.rate;\n      }\n    }\n\n    return rateBetweenSourceAndUSD / rateBetweenTargetAndUSD;\n  }\n\n  getTargetAmountBySource(source : string, target : string, amount : number){\n    var rateBetweenSourceAndTarget = this.getRateBetweenSourceAndTarget(source, target);\n    return amount / rateBetweenSourceAndTarget;\n  }\n\n  getSourceAmountByTarget(source : string, target : string, amount : number){\n    var rateBetweenSourceAndTarget = this.getRateBetweenSourceAndTarget(source, target);\n    return amount * rateBetweenSourceAndTarget;\n  }\n\n  async getExchangeRates(){\n    var u = URL;\n    for(var i = 0; i < CURRENCIES.length; i ++){\n      u += CURRENCIES[i];\n      if(i != (CURRENCIES.length - 1)){\n        u += ',';\n      }\n    }\n    \n    await this.http.get(u).subscribe((data) => {\n      console.log('json get');\n      if(data['success'] == true){\n        this.exchangeRates = [];\n        var quotes = data['quotes'];\n        var source = data['source'];\n\n        for(let key in quotes){\n          //find the source and target\n          var s = source;\n          var t = key.substr(key.indexOf(source) + source.length, key.length - source.length);\n          \n          var er = new ExchangeRate;\n          er.source = s;\n          er.target = t;\n          er.rate = quotes[key];\n          this.exchangeRates.push(er);\n        }\n      }\n    });\n\n    return this.exchangeRates;\n  }\n}\n","export class ExchangeRate {\n    source: string;\n    target: string;\n    rate: number;\n  }","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n\n  let onDeviceReady = () => {\n    platformBrowserDynamic().bootstrapModule(AppModule);\n  };\n  document.addEventListener('deviceready', onDeviceReady, false);"],"sourceRoot":""}